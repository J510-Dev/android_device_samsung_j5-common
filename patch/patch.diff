diff -ur a/packages/services/Telecomm/src/com/android/server/telecom/CallAudioModeStateMachine.java b/packages/services/Telecomm/src/com/android/server/telecom/CallAudioModeStateMachine.java
--- a/packages/services/Telecomm/src/com/android/server/telecom/CallAudioModeStateMachine.java	Wed Apr 20 08:50:20 2016
+++ b/packages/services/Telecomm/src/com/android/server/telecom/CallAudioModeStateMachine.java	Thu May 12 01:31:40 2016
@@ -151,7 +151,12 @@
         public void enter() {
             if (mIsInitialized) {
                 Log.i(LOG_TAG, "Abandoning audio focus: now UNFOCUSED");
+                boolean setRealcallAudioParams = SystemProperties
+                    .getBoolean("ro.telephony.samsung.realcall", false);
                 mAudioManager.abandonAudioFocusForCall();
+                if (setRealcallAudioParams) {
+                    mAudioManager.setParameters("realcall=off");
+                }
                 mAudioManager.setMode(AudioManager.MODE_NORMAL);

                 mMostRecentMode = AudioManager.MODE_NORMAL;
@@ -292,6 +297,8 @@
             Log.i(LOG_TAG, "Audio focus entering SIM CALL state");
             boolean setMsimAudioParams = SystemProperties
                     .getBoolean("ro.multisim.set_audio_params", false);
+            boolean setRealcallAudioParams = SystemProperties
+                    .getBoolean("ro.telephony.samsung.realcall", false);
             Call call = mCallAudioManager.getForegroundCall();

             mAudioManager.requestAudioFocusForCall(AudioManager.STREAM_VOICE_CALL,
@@ -305,6 +312,9 @@
                 } else if (phoneId == 1) {
                     mAudioManager.setParameters("phone_type=cp2");
                 }
+                if(setRealcallAudioParams){
+                    mAudioManager.setParameters("realcall=on");
+                }
             }

             mAudioManager.setMode(AudioManager.MODE_IN_CALL);
diff --git a/hardware/qcom/audio-caf/msm8916/hal/msm8974/platform.c b/hardware/qcom/audio-caf/msm8916/hal/msm8974/platform.c
index 945dc40..ecdf37b 100644
--- a/hardware/qcom/audio-caf/msm8916/hal/msm8974/platform.c
+++ b/hardware/qcom/audio-caf/msm8916/hal/msm8974/platform.c
@@ -883,8 +883,15 @@ static int hw_util_open(int card_no)
     ALOGD("%s Opening device %s\n", __func__, dev_name);
     fd = open(dev_name, O_WRONLY);
     if (fd < 0) {
-        ALOGE("%s: cannot open device '%s'\n", __func__, dev_name);
-        return fd;
+        ALOGE("%s: cannot open device '%s'. Attempting again..\n", __func__, dev_name);
+
+	// attempt to open node 10.
+	memset(dev_name, 0, 256);
+	snprintf(dev_name, sizeof(dev_name), "/dev/snd/hwC%uD10",
+                           card_no);
+
+	fd = open(dev_name, O_WRONLY);
+	if (fd < 0) return fd;
     }
     ALOGD("%s success", __func__);
     return fd;
diff --git a/hardware/qcom/audio-caf/msm8916/hal/msm8916/platform.c b/hardware/qcom/audio-caf/msm8916/hal/msm8916/platform.c
index 32be300..1114690 100644
--- a/hardware/qcom/audio-caf/msm8916/hal/msm8916/platform.c
+++ b/hardware/qcom/audio-caf/msm8916/hal/msm8916/platform.c
@@ -1063,8 +1063,15 @@ static int hw_util_open(int card_no)
     ALOGD("%s Opening device %s\n", __func__, dev_name);
     fd = open(dev_name, O_WRONLY);
     if (fd < 0) {
-        ALOGE("%s: cannot open device '%s'\n", __func__, dev_name);
-        return fd;
+        ALOGE("%s: cannot open device '%s'. Attempting again..\n", __func__, dev_name);
+
+	// attempt to open node 10.
+	memset(dev_name, 0, 256);
+	snprintf(dev_name, sizeof(dev_name), "/dev/snd/hwC%uD10",
+                           card_no);
+
+	fd = open(dev_name, O_WRONLY);
+	if (fd < 0) return fd;
     }
     ALOGD("%s success", __func__);
     return fd;
diff --git a/frameworks/base/core/jni/fd_utils-inl.h b/frameworks/base/core/jni/fd_utils-inl.h
index f245a7fc..69f9e0b5 100644
--- a/frameworks/base/core/jni/fd_utils-inl.h
+++ b/frameworks/base/core/jni/fd_utils-inl.h
@@ -379,13 +379,9 @@ class FileDescriptorTable {
       }
 
       FileDescriptorInfo* info = FileDescriptorInfo::createFromFd(fd);
-      if (info == NULL) {
-        if (closedir(d) == -1) {
-          ALOGE("Unable to close directory : %s", strerror(errno));
-        }
-        return NULL;
+      if (info != NULL) {
+        open_fd_map[fd] = info;
       }
-      open_fd_map[fd] = info;
     }
 
     if (closedir(d) == -1) {
@@ -413,7 +409,10 @@ class FileDescriptorTable {
         continue;
       }
 
-      open_fds.insert(fd);
+      FileDescriptorInfo* info = FileDescriptorInfo::createFromFd(fd);
+      if (info != NULL) {
+        open_fds.insert(fd);
+      }
     }
 
     if (closedir(d) == -1) {
diff --git a/frameworks/base/data/keyboards/Generic.kl b/frameworks/base/data/keyboards/Generic.kl
index f10ba96..ae84296 100644
--- a/frameworks/base/data/keyboards/Generic.kl
+++ b/frameworks/base/data/keyboards/Generic.kl
@@ -247,6 +247,9 @@ key 224   BRIGHTNESS_DOWN
 key 225   BRIGHTNESS_UP
 key 226   HEADSETHOOK
 
+# samsung
+key 254   APP_SWITCH
+
 key 256   BUTTON_1
 key 257   BUTTON_2
 key 258   BUTTON_3
diff -ur a/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java b/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java
--- a/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java	Mon Jun 20 17:28:46 2016
+++ b/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java	Mon Jun 27 10:45:01 2016
@@ -1066,14 +1066,25 @@
                mSpeakerPhoneOn = true;
                Log.d(LOGTAG, "Audio source set it as speaker");
                AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_SPEAKER);
+               mAudioManager.setParameters("fm_mode=on");
+               mAudioManager.setParameters("fm_radio_volume=on");
+               mAudioManager.setParameters("FMRadioVol=0.1496235728");
+               mAudioManager.setMode(AudioManager.MODE_IN_CALL);
+               mAudioManager.setSpeakerphoneOn(true);
            } else {
                Log.d(LOGTAG, "Audio source set it as headset");
                AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
+               mAudioManager.setParameters("fm_mode=on");
+               mAudioManager.setParameters("fm_radio_volume=on");
+               mAudioManager.setParameters("FMRadioVol=0.1496235728");
+               mAudioManager.setMode(AudioManager.MODE_IN_CALL);
+               mAudioManager.setSpeakerphoneOn(false);
            }
        } else {
                Log.d(LOGTAG, "A2DP is connected, set audio source to A2DP HS");
                AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_SPEAKER);
                mSpeakerPhoneOn = true;
+               mAudioManager.setSpeakerphoneOn(true);
        }
 
        mPlaybackInProgress = true;
@@ -1090,6 +1101,8 @@
        Log.d(LOGTAG, "In stopFM");
        configureAudioDataPath(false);
        mPlaybackInProgress = false;
+	   mAudioManager.setParameters("fm_radio_mute=1");
+       mAudioManager.setParameters("fm_mode=off");
        try {
            if ((mServiceInUse) && (mCallbacks != null))
                mCallbacks.onFmAudioPathStopped();
@@ -1539,6 +1552,7 @@
       public void run() {
          Log.v(LOGTAG, "Disabling Speaker");
          AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
+		 mAudioManager.setSpeakerphoneOn(false);
       }
    };
 
@@ -2257,6 +2271,7 @@
       if ( mSpeakerPhoneOn) {
           mSpeakerPhoneOn = false;
           AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
+		  mAudioManager.setSpeakerphoneOn(false);
       }
    }
 
@@ -2376,10 +2391,12 @@
             } else {
                 Log.d(LOGTAG, "A2DP is not connected, force none");
                 AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
+				mAudioManager.setSpeakerphoneOn(false);
             }
        } else if (speakerOn == true) {
            Log.d(LOGTAG, "enabling speaker");
            AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_SPEAKER);
+		   mAudioManager.setSpeakerphoneOn(true);
        }
 
        Log.d(LOGTAG, "speakerOn completed:" + speakerOn);
@@ -2480,6 +2497,7 @@
       {
          mMuted = true;
          audioManager.setParameters("fm_mute=1");
+		 audioManager.setParameters("fm_radio_mute=1");
          if (mAudioTrack != null)
              mAudioTrack.setVolume(0.0f);
       }
@@ -2502,6 +2520,7 @@
       {
          mMuted = false;
          audioManager.setParameters("fm_mute=0");
+		 audioManager.setParameters("fm_radio_mute=0");
          if (mAudioTrack != null)
              mAudioTrack.setVolume(1.0f);
          if (mResumeAfterCall)
